{"version":3,"sources":["common/Header/Header.js","common/Section/Section.js","common/Statement/Statement.js","helpers/validation.js","helpers/categorySelect.js","helpers/countBudget.js","helpers/styledError.js","helpers/useLocalStorageState.js","components/Message.js","components/Form.js","helpers/initialData.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","style","className","Section","body","Statement","data","removeItem","map","index","id","amount","product","category","onClick","radioButtonValidation","required","value","message","valueAsNumber","productValidation","pattern","minLength","maxLength","amountValidation","selectValidation","categorySelect","countBudget","incomes","expenses","totalIncomes","totalExpenses","styledError","color","fontSize","input","border","useLocalStorageState","keyName","initialValue","useState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","Message","isSubmitted","Form","addSubmittedItem","useForm","register","handleSubmit","reset","errors","formState","setIsSubmitted","backgroundColor","onSubmit","setTimeout","type","htmlFor","statement","placeholder","name","el","initialIncome","initialExpenses","App","setIncomes","setExpenses","filter","item","submittedData","uuidv4","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3a7fe3e.chunk.js","sourcesContent":["import \"./style.css\";\n\nconst Header = ({ title, style }) => {\n  return (\n    <header className=\"header\" style={style}>\n      <h2 className=\"heading\">{title}</h2>\n    </header>\n  );\n};\n\nexport default Header;\n","import Header from \"../Header/Header\";\nimport \"./style.css\";\n\nconst Section = ({ title, body }) => (\n  <section className=\"wrapper\">\n    <Header title={title} />\n    <div className=\"bodyWrapper\">{body}</div>\n  </section>\n);\n\nexport default Section;\n","import \"./style.css\";\n\nconst Statement = ({ data, removeItem, className }) => {\n  return (\n    <div className={className}>\n      <ul className=\"list\">\n        {data &&\n          data.map(({ id, amount, product, category }, index) => (\n            <li className=\"item\" key={`item-${id}`}>\n              <span className=\"content\">\n                {product} {category}, {amount} Â£}\n              </span>\n              <button className=\"button\" onClick={() => removeItem(id)}>\n                X\n              </button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Statement;\n","export const radioButtonValidation = {\n  required: { value: true, message: \"Choose income or expense\" },\n  valueAsNumber: { value: true, message: \"Please, type only numbers\" },\n};\n\nexport const productValidation = {\n  required: { value: true, message: \"Please fill out this field\" },\n  pattern: {\n    value: /^\\D[a-zA-Z0-9_]+( [a-zA-Z0-9_]+)*$/,\n    message: \"Description is invalid\",\n  },\n  minLength: { value: 5, message: \"Min length of description is 3\" },\n  maxLength: { value: 40, message: \"Max length of name is 40\" },\n};\n\nexport const amountValidation = {\n  required: { value: true, message: \"Please fill out this field\" },\n};\n\nexport const selectValidation = {\n  required: { value: true, message: \"Please choose category\" },\n};\n","const categorySelect = [\n  \"Work\",\n  \"Gym\",\n  \"Food\",\n  \"Trip\",\n  \"Holiday\",\n  \"Hobby\",\n  \"Salary\",\n  \"Sport\",\n];\n\nexport default categorySelect;\n","const countBudget = (incomes, expenses) => {\n  let totalIncomes = 0;\n  let totalExpenses = 0;\n\n  for (const element of incomes) {\n    totalIncomes = totalIncomes + +element.amount;\n  }\n\n  for (const element of expenses) {\n    totalExpenses = totalExpenses + +element.amount;\n  }\n\n  return totalIncomes - totalExpenses;\n};\n\nexport default countBudget;\n","const styledError = {\n  message: {\n    color: \"crimson\",\n    fontSize: \"14px\",\n  },\n  input: { border: \"1px solid crimson\" },\n};\n\nexport default styledError;\n","import { useState, useEffect } from \"react\";\n\nconst useLocalStorageState = (keyName, initialValue) => {\n  const getInitialValue = () => {\n    const localStorageValue = localStorage.getItem(keyName);\n\n    if (localStorageValue === null) {\n      return initialValue;\n    }\n\n    return JSON.parse(localStorage.getItem(keyName));\n  };\n\n  const [state, setState] = useState(getInitialValue);\n\n  useEffect(() => {\n    localStorage.setItem(keyName, JSON.stringify(state));\n  }, [keyName, state]);\n\n  return [state, setState];\n};\n\nexport default useLocalStorageState;\n","import \"./style.css\";\n\nconst Message = ({ isSubmitted }) => (\n  <footer className=\"submitted-footer\">\n    {isSubmitted && <p className=\"animation-text-onSubmit\">Submitted!</p>}\n  </footer>\n);\n\nexport default Message;\n","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport \"./style.css\";\nimport {\n  radioButtonValidation,\n  productValidation,\n  amountValidation,\n  selectValidation,\n} from \"../helpers/validation\";\n\nimport { Header } from \"../common\";\nimport { styledError, categorySelect } from \"../helpers\";\nimport Message from \"./Message\";\n\nconst Form = ({ addSubmittedItem, countBudget }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = (data) => {\n    setIsSubmitted(true);\n\n    setTimeout(() => {\n      setIsSubmitted(false);\n    }, 2000);\n\n    addSubmittedItem(data);\n    reset();\n  };\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  return (\n    <div className=\"container flex-item-one\">\n      <Header\n        title={`Budget: ${countBudget} Â£`}\n        style={{\n          backgroundColor: countBudget < 0 ? \"crimson\" : \"teal\",\n        }}\n      />\n      <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n        <div className=\"form-control-wrapper\">\n          <div>\n            <p className=\"form-paragraph\">Whether it is income or income:</p>\n            <div>\n              <input\n                {...register(\"statement\", { ...radioButtonValidation })}\n                type=\"radio\"\n                value=\"income\"\n                id=\"income\"\n              />\n              <label\n                className=\"form-label form-label-padding\"\n                htmlFor=\"statement\"\n              >\n                Income\n              </label>\n            </div>\n            <div>\n              <input\n                {...register(\"statement\", { ...radioButtonValidation })}\n                type=\"radio\"\n                value=\"expense\"\n                id=\"statement\"\n              />\n              <label\n                className=\"form-label form-label-padding\"\n                htmlFor=\"statement\"\n              >\n                Expense\n              </label>\n            </div>\n            {errors.statement && (\n              <p style={styledError.message}>{errors.statement.message}</p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form-control-wrapper\">\n          <label className=\"form-label\" htmlFor=\"\">\n            Describe your item:\n          </label>\n          <input\n            placeholder=\"enter your product\"\n            style={errors.product ? styledError.input : null}\n            {...register(\"product\", { ...productValidation })}\n            className=\"form-control\"\n          ></input>\n          {errors.product && (\n            <p style={styledError.message}>{errors.product.message}</p>\n          )}\n        </div>\n        <div className=\"form-control-wrapper\">\n          <label className=\"form-label\" htmlFor=\"amount\">\n            Amount:\n          </label>\n          <input\n            placeholder=\"enter an amount\"\n            type=\"number\"\n            style={errors.amount ? styledError.input : null}\n            {...register(\"amount\", { ...amountValidation })}\n            className=\"form-control\"\n          ></input>\n          {errors.amount && (\n            <p style={styledError.message}>{errors.amount.message}</p>\n          )}\n        </div>\n\n        <div className=\"form-control-wrapper\">\n          <label className=\"form-label\" htmlFor=\"description\" id=\"category\">\n            Choose category:\n          </label>\n          <select\n            name=\"category\"\n            id=\"category\"\n            {...register(\"category\", { ...selectValidation })}\n            className=\"form-control form-control-select\"\n          >\n            <option value=\"\">select</option>\n            {categorySelect.map((el) => (\n              <option key={`option-${el}`} value={el}>\n                {el}\n              </option>\n            ))}\n          </select>\n          {errors.category && (\n            <p style={styledError.message}>{errors.category.message}</p>\n          )}\n        </div>\n\n        <button className=\"form-button\">Submit</button>\n      </form>\n      <Message isSubmitted={isSubmitted} />\n    </div>\n  );\n};\n\nexport default Form;\n","export const initialIncome = [\n  {\n    id: \"1\",\n    statement: \"income\",\n    product: \"salary\",\n    amount: \"23525\",\n    category: \"work\",\n  },\n  {\n    id: \"2\",\n    statement: \"income\",\n    product: \"award\",\n    amount: \"600\",\n    category: \"food\",\n  },\n];\n\nexport const initialExpenses = [\n  {\n    id: \"3\",\n    statement: \"expense\",\n    product: \"classical guitar\",\n    amount: \"3426\",\n    category: \"hobby\",\n  },\n  {\n    id: \"4\",\n    statement: \"expense\",\n    product: \"shoes\",\n    amount: \"2352352\",\n    category: \"sport\",\n  },\n];\n","import { v4 as uuidv4 } from \"uuid\";\n\nimport \"./styles.css\";\nimport { Section, Statement } from \"./common\";\nimport Form from \"./components\";\nimport { countBudget, useLocalStorageState } from \"./helpers\";\nimport { initialIncome, initialExpenses } from \"./helpers/initialData\";\n\nfunction App() {\n  const [incomes, setIncomes] = useLocalStorageState(\"incomes\", initialIncome);\n\n  const [expenses, setExpenses] = useLocalStorageState(\n    \"expenses\",\n    initialExpenses\n  );\n\n  const addSubmittedItem = (data) => {\n    const submittedData = {\n      id: uuidv4(),\n      statement: data.statement,\n      product: data.product,\n      amount: data.amount,\n      category: data.category,\n    };\n\n    submittedData.statement === \"income\"\n      ? setIncomes((prevState) => [...prevState, submittedData])\n      : setExpenses((prevState) => [...prevState, submittedData]);\n  };\n\n  const handleRemoveIncomes = (id) =>\n    setIncomes(incomes.filter((item) => item.id !== id));\n\n  const handleRemoveExpenses = (id) =>\n    setExpenses(expenses.filter((item) => item.id !== id));\n\n  return (\n    <main className=\"main-container\">\n      <Section\n        title=\"Incomes:\"\n        body={<Statement data={incomes} removeItem={handleRemoveIncomes} />}\n      />\n      <Form\n        addSubmittedItem={addSubmittedItem}\n        countBudget={countBudget(incomes, expenses)}\n      />\n\n      <Section\n        title=\"Expenses:\"\n        body={<Statement data={expenses} removeItem={handleRemoveExpenses} />}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}